plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.wimp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// JPA + DMBS
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.flywaydb:flyway-mysql'
    implementation 'org.projectlombok:lombok:1.18.26'
    testImplementation 'junit:junit:4.13.1'
	runtimeOnly 'mysql:mysql-connector-java:8.0.31'

	// JWT
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	implementation 'org.springframework.boot:spring-boot-starter-security'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// webflux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	implementation 'com.github.maricn:logback-slack-appender:1.4.0'
	implementation 'ch.qos.logback:logback-access'

	// flywaydb
	implementation 'org.flywaydb:flyway-core'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// redis
	implementation 'org.springframework.session:spring-session-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.redisson:redisson:3.21.0'

	implementation 'net.javacrumbs.shedlock:shedlock-spring:5.5.0'
	implementation 'net.javacrumbs.shedlock:shedlock-provider-redis-spring:5.5.0'

	// actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// google phonenumber
	implementation 'com.googlecode.libphonenumber:libphonenumber:8.13.16'

	// bouncycastle crypto APIs
	implementation 'org.bouncycastle:bcprov-jdk18on:1.75'

	// email
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	implementation 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
	useJUnitPlatform()
}


def querydslDir = "$buildDir/generated/querydsl"

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(querydslDir)
}


